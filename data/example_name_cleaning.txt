/* _____________________________________________________________________________ **
** ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ **

    ** -- What does this dofile do?

        - Cleaning Sigwatch, selecting country_corp and changing banks' names

** _____________________________________________________________________________ **
** ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ */
** _____________________________________________________________________________ **
** ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ **

** -- I. Data Cleaning

** _____________________________________________________________________________ **
** ¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯¯ **
clear all

cd $datapath\Sigwatch_data

use final_sigwatch_data.dta

gen climate_issues = regexm(issue_name1, "Carbon")
replace climate_issues= regexm(issue_name1, "carbon") if climate_issues!=1
*replace climate_issues= regexm(issue_name1, "environment")  if climate_issues!=1
*replace climate_issues= regexm(issue_name1, "footprint")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Climate change")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "climate change")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "coal")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Coal")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "mining")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Mining")  if climate_issues!=1
*replace climate_issues= regexm(issue_name1, "nuclear")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "oilsands")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Oilsands")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "old-growth logging")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Old-growth logging")  if climate_issues!=1
*replace climate_issues= regexm(issue_name1, "Mining")  if climate_issues!=1
*replace climate_issues= regexm(issue_name1, "mining")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Oil and gas")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "oil and gas")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Oil")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "oil")  if climate_issues!=1
*replace climate_issues= regexm(issue_name1, "pollution")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Fossil fuels")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "fossil fuels")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "pipelines")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Pipelines")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "logging")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Logging")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "gas")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Gas")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "drilling offshore")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Drilling offshore")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Refineries")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "refineries")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Shale oil")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "shale oil")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "fracking")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Fracking")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "carbon emissions")  if climate_issues!=1
replace climate_issues= regexm(issue_name1, "Carbon emissions")  if climate_issues!=1


replace climate_issues= regexm(issue_name2, "Climate change")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "climate change")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Arctic")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "arctic")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Coal mining")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "coal mining")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "coal")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Coal")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "GHG emissions")  if climate_issues!=1
*replace climate_issues= regexm(issue_name2, "pollution")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "LNG")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "carbon")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Carbon")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "greenwashing")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Greenwashing")  if climate_issues!=1
*replace climate_issues= regexm(issue_name2, "land-grabbing")  if climate_issues!=1
*replace climate_issues= regexm(issue_name2, "mining")  if climate_issues!=1
*replace climate_issues= regexm(issue_name2, "nuclear")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "oilsands")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Oilsands")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "old-growth logging")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Old-growth logging")  if climate_issues!=1
*replace climate_issues= regexm(issue_name2, "polluters")  if climate_issues!=1
*replace climate_issues= regexm(issue_name2, "Marine wildlife")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "LNG")  if climate_issues!=1
*replace climate_issues= regexm(issue_name2, "Mining")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "oil")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Oil")  if climate_issues!=1
*replace climate_issues= regexm(issue_name2, "Pesticides")  if climate_issues!=1
*replace climate_issues= regexm(issue_name2, "health")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "renewable energy")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Renewable energy")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "oil & gas")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Oil & gas")  if climate_issues!=1
*replace climate_issues= regexm(issue_name2, "pollution")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "plastics")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Plastics")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "drilling")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Drilling")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "methan emissions")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Methan emissions")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "pipelines")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Pipelines")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Shale")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "fracking")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "shale")  if climate_issues!=1
replace climate_issues= regexm(issue_name2, "Fracking")  if climate_issues!=1




replace climate_issues= regexm(issue_name3, "Climate change")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "climate change")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "Coal")  if climate_issues!=1
*replace climate_issues= regexm(issue_name3, "mining")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "coal")  if climate_issues!=1
*replace climate_issues= regexm(issue_name3, "pollution")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "carbon")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "Carbon")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "greenwashing")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "Greenwashing")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "LNG")  if climate_issues!=1
*replace climate_issues= regexm(issue_name3, "biofuels")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "land-grabbing")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "Land-grabbing")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "carbon")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "Carbon")  if climate_issues!=1
*replace climate_issues= regexm(issue_name3, "mining")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "oilsands")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "Oilsands")  if climate_issues!=1
*replace climate_issues= regexm(issue_name3, "power")  if climate_issues!=1
*replace climate_issues= regexm(issue_name3, "Mining")  if climate_issues!=1
*replace climate_issues= regexm(issue_name3, "Nuclear")  if climate_issues!=1
*replace climate_issues= regexm(issue_name3, "nuclear")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "Oil and gas")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "oil and gas")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "oil")  if climate_issues!=1
replace climate_issues= regexm(issue_name3, "Oil")  if climate_issues!=1
*replace climate_issues= regexm(issue_name3, "energy")  if climate_issues!=1
*replace climate_issues= regexm(issue_name3, "protection")  if climate_issues!=1



********************************************************************************
*********************** Extending to enviromental issues ***********************
********************************************************************************
gen environmental_issues=0
replace environmental_issues= regexm(issue_name1, "emissions") if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Emissions") if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "biofuel")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Biofuel")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "carbon trading")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Carbon trading")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "chemical")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Chemical")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Air pollution")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "air pollution")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "environment")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Environment")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "sustainable")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Sustainable")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "bio fuels")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Bio fuels")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "palm oil")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Palm oil")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "hydro power")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Hydro power")  if environmental_issues!=1
*replace environmental_issues= regexm(issue_name1, "Nuclear")  if environmental_issues!=1
*replace environmental_issues= regexm(issue_name1, "nuclear")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Green")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "green")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "greenwashing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Greenwashing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Land grabbing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "land grabbing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Farming")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "farming")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Animal")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "animal")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "enviromental")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Enviromental")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "mining")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Mining")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Pipelines")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "pipelines")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Oilsands")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "oilsands")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "oilshale")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Oilshale")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "rainforest")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Rainforest")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Paper consumption")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "paper consumption")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "forests")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Forests")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "water")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Water")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "pollution")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Pollution")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "marine enviroment")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Marine enviroment")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "agricultural")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Agricultural")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "extraction")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name1, "Extraction")  if environmental_issues!=1

replace environmental_issues= regexm(issue_name2, "Agriculture")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "agriculture")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Animal welfare")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "animal welfare")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Animal")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "animal")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Biotech")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "biotech")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "mining")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Mining")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Emissions")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Air pollution")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "emissions")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "air pollution")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Coral reef")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "coral reef")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Earth")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "earth")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Sustainable")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "sustainable")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "farm")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Farm")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Paper")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "paper")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Agriculture")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "agriculture")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Animal research")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "animal research")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Biofuels")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "biofuels")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "dams")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Dams")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "land-grabbing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Land-grabbing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "mining")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Mining")  if environmental_issues!=1
*replace environmental_issues= regexm(issue_name2, "Nuclear")  if environmental_issues!=1
*replace environmental_issues= regexm(issue_name2, "nuclear")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "polluters")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Polluters")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "power")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Power")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "conservation")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Conservation")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "green")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Green")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Land grabbing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "land grabbing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "farm")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Farm")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Marine wildlife")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "marine wildlife")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "submarine")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Submarine")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "deepwater")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Deepwater")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "carbon")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Carbon")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "pollution")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Pollution")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "rainforest")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Rainforest")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Paper consumption")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "paper consumption")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "water")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Water")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "illegal fishing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Illegal fishing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "agricultural")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Agricultural")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "waste")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Waste")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "water")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name2, "Water")  if environmental_issues!=1

replace environmental_issues= regexm(issue_name3, "Coral reef")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "coral reef")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "Conservation")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "conservation")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "biodiversity")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "Biodiversity")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "animal")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "Animal")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "Green marketing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "green marketing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "greenwashing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "Greenwashing")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "Water")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "water")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "palm oil")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "Palm oil")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "agricultural")  if environmental_issues!=1
replace environmental_issues= regexm(issue_name3, "Agricultural ")  if environmental_issues!=1


g selected_issues= 1 if environmental_issues==1 | climate_issues==1

keep if selected_issues==1


** we want to keep both subsidiarty and parent company
keep if company_type == "Parent" | company_type == "Subsidiary"

order country_corp company_parent_country
count if  country_corp != company_parent_country
br if  country_corp != company_parent_country

replace country_corp =  company_parent_country if country_corp != company_parent_country

*** here we want to restrict the sample to those countries which are in Datastream database too
keep if country_corp=="Germany"| ///
country_corp=="Belgium"| ///
country_corp=="Cyprus"| ///
country_corp=="Estonia"| ///
country_corp=="Spain"| ///
country_corp=="Finland"| ///
country_corp=="France"| ///
country_corp=="Greece"| ///
country_corp=="Ireland"| ///
country_corp=="Italy"| ///
country_corp=="Lithuania"| ///
country_corp=="Malta"| ///
country_corp=="Netherlands"| ///
country_corp=="Austria"| ///
country_corp=="Portugal"| ///
country_corp=="Slovenia"| ///
country_corp=="Slovakia"| ///
country_corp=="UK"| ///
country_corp=="US"| ///
country_corp=="USA"| ///
country_corp=="Finland"| ///
country_corp=="Norway"| ///
country_corp=="Sweden"| ///
country_corp=="Switzerland"
count 

** with this first collapse we want to find all actions taken by the same ngo versus the same firm in the same date and keep only the first one.
collapse (first)  uid_archive company_* ///
partnership issue_* active_* target_* ///
ngo_code1 ngo_power1 ngo_country_code1 ngo_country1 ///
ngo_code2 ngo_name2 ngo_power2 ngo_country_code2 ngo_country2 ///
ngo_code3 ngo_name3 ngo_power3 ngo_country_code3 ngo_country3 ///
ngo_code4 ngo_name4 ngo_power4 ngo_country_code4 ngo_country4 ///
ngo_code5 ngo_name5 ngo_power5 ngo_country_code5 ngo_country5 ///
country_* corp_* isin* bloomberg_ticker industry_* ///
report link* (mean) prominence (max) maxprominence= prominence (mean) sentiment (min) minsentiment= sentiment environmental_issues climate_issues, by(company ngo_name1 date)

g year= year(date)
order date company sentiment ngo_name1
sort company date

*** Creation of dummy for those rows which are less distant than 30 days. We consider only those case in which the ngo and the firm are the same
bys company ngo_name1 (date): g repetition=(date[_n]-date[_n-1]<30 & company[_n]==company[_n-1] & ngo_name1[_n]==ngo_name1[_n-1])
replace repetition=1 if repetition[_n+1]==1

order repetition


*** now we want to capture those events which are taken vs the same firm from the same ngo and consider only the first
cap drop temp
gen temp= _n
order temp 
egen companyngo = group(company_code ngo_code1)
xtset companyngo date
replace temp = temp[_n-1] if repetition[_n-1]==1 & repetition[_n]==1


collapse (first) date company ngo_name1 uid_archive company_code company_type company_parent_code ///
company_parent company_parent_country partnership issue_code1 issue_name1 issue_code2 issue_name2 issue_code3 ///
issue_name3 active_country_code1 active_country1 active_country_code2 active_country2 active_country_code3 ///
active_country3 active_country_code4 active_country4 active_country_code5 active_country5 active_country_code6 ///
active_country6 target_country_code1 target_country1 target_country_code2 target_country2 target_country_code3 ///
target_country3 target_country_code4 target_country4 target_country_code5 target_country5 target_country_code6 ///
target_country6 ngo_code1 ngo_power1 ngo_country_code1 ngo_country1 ngo_code2 ngo_name2 ngo_power2 ngo_country_code2 ///
ngo_country2 ngo_code3 ngo_name3 ngo_power3 ngo_country_code3 ngo_country3 ngo_code4 ngo_name4 ngo_power4 ngo_country_code4 ///
ngo_country4 ngo_code5 ngo_name5 ngo_power5 ngo_country_code5 ngo_country5 country_code_corp country_corp ///
corp_industry_sector_code1 corp_industry_sector1 corp_industry_sector_code2 corp_industry_sector2 corp_industry_sector_code3 ///
corp_industry_sector3 isin_corporate_name_official isin_corporate_name_cleaned bloomberg_ticker isin isin_2 isin_3 ///
industry_sector_code1 industry_sector1 industry_sector_code2 industry_sector2 industry_sector_code3 industry_sector3 ///
industry_sector_code4 industry_sector4 report link1 link2 link3 link4 link5 year environmental_issues climate_issues ///
repetition (mean) prominence (max) maxprominence= prominence (mean) sentiment (min) minsentiment= sentiment, by(temp)

*** I want to test whether in the same days a firm receive a negative action by an NGO and a postive by another.
*** Kruger drop these observations because they may cause problems in interpretation. 

count if date[_n]-date[_n-1]<=5 & sentiment[_n]*sentiment[_n-1]<0 & company[_n]==company[_n-1]
bys company (date): g opposite_sentiment = (date[_n]-date[_n-1]<=5 & sentiment[_n]*sentiment[_n-1]<0 & company[_n]==company[_n-1])
replace opposite_sentiment=1 if opposite_sentiment[_n+1]==1
drop if opposite_sentiment==1


order date company ngo_name1 repetition prominence sentiment

g negative=(sentiment<0)
g positive=(sentiment>0)

sort company date
count if date[_n]-date[_n-1]<=250 & company[_n]==company[_n-1]
bys company (date): g proximity= (date[_n]-date[_n-1]<=250 & company[_n]==company[_n-1])



sort isin date
count if isin[_n]==isin[_n+1] & date[_n]==date[_n+1]
*** There are some case in which ISIN and date are duplicated.
collapse (first) company ngo_name1 uid_archive company_code company_type company_parent_code ///
company_parent company_parent_country partnership issue_code1 issue_name1 issue_code2 issue_name2 issue_code3 ///
issue_name3 active_country_code1 active_country1 active_country_code2 active_country2 active_country_code3 ///
active_country3 active_country_code4 active_country4 active_country_code5 active_country5 active_country_code6 ///
active_country6 target_country_code1 target_country1 target_country_code2 target_country2 target_country_code3 ///
target_country3 target_country_code4 target_country4 target_country_code5 target_country5 target_country_code6 ///
target_country6 ngo_code1 ngo_power1 ngo_country_code1 ngo_country1 ngo_code2 ngo_name2 ngo_power2 ngo_country_code2 ///
ngo_country2 ngo_code3 ngo_name3 ngo_power3 ngo_country_code3 ngo_country3 ngo_code4 ngo_name4 ngo_power4 ngo_country_code4 ///
ngo_country4 ngo_code5 ngo_name5 ngo_power5 ngo_country_code5 ngo_country5 country_code_corp country_corp ///
corp_industry_sector_code1 corp_industry_sector1 corp_industry_sector_code2 corp_industry_sector2 corp_industry_sector_code3 ///
corp_industry_sector3 isin_corporate_name_official isin_corporate_name_cleaned bloomberg_ticker isin_2 isin_3 ///
industry_sector_code1 industry_sector1 industry_sector_code2 industry_sector2 industry_sector_code3 industry_sector3 ///
industry_sector_code4 industry_sector4 report link1 link2 link3 link4 link5 year environmental_issues climate_issues ///
repetition (mean) prominence (max) maxprominence= prominence (mean) sentiment (min) minsentiment= sentiment temp, by(date isin)

** we want lower letters to merge correctly with datastream
g company2= lower(company)
drop company
rename company2 company

*** we rename some company as they are named in datastream

replace company="abn amro bank" if company=="abn amro bank n.v."
replace company="bank of ireland group" if company=="bank of ireland "
replace company="barclays" if company=="barclays bank"
replace company="discover financial svs." if company=="discover card"
replace company="banco santander" if company=="grupo santander"
replace company="banca generali" if company=="gruppo assicurazioni generali"
replace company="hsbc holdings" if company=="hsbc"
replace company="ing groep" if company=="ing"
replace company="kbc group" if company=="kbc bank"
replace company="lloyds banking group" if company=="lloyds banking group plc" | company=="lloyd's of london"
replace company="nibc holding" if company=="nibc"
replace company="standard chartered" if company=="standard chartered bank"
replace company="van lanschot kempen" if company=="van lanschot"
replace company="wells fargo & co" if company=="wells fargo & wachovia"
replace company="royal bank of sctl.gp." if company=="rbs"| company=="royal bank of scotland (rbs)"| company=="rbs group"
replace company="aib group" if company=="allied irish banks p.l.c. (aib)"
replace company="hsbc holdings" if company=="hsbc global asset management"
replace company="pnc finl.svs.gp." if company=="pnc bank"
replace company="abn amro bank" if company=="abn amro bank n.v."
replace company="banca generali" if company=="gruppo assicurazioni generali"
replace company="banca monte dei paschi" if company=="monte dei paschi di siena bank / bmps"
replace company="banco de sabadell" if company=="banco sabadell"
replace company="banco santander" if company=="grupo santander"
replace company="bank of america" if company=="bank of america"
replace company="bank of ireland group" if company=="bank of ireland"
replace company="bankia" if company=="bankia"
replace company="bankinter r" if company=="bankinter, s.a."
replace company="barclays" if company=="barclays bank"
replace company="bbv.argentaria" if company=="bbva group / banco bilbao vizcaya argentaria"
replace company="bnp paribas" if company=="bnp paribas"
replace company="caixabank" if company=="caixabank"
replace company="citizens financial group" if company=="citizens financial group"
replace company="comerica" if company=="comerica"
replace company="credit agricole" if company=="credit agricole"
replace company="discover financial svs." if company=="discover financial services"
replace company="erste group bank" if company=="erste group"
replace company="fifth third bancorp" if company=="fifth third bank"
replace company="hsbc holdings" if company=="hsbc"
replace company="huntington bcsh." if company=="huntington bank"
replace company="ing groep" if company=="ing"
replace company="intesa sanpaolo" if company=="intesa sanpaolo"
replace company="kbc group" if company=="kbc bank"
replace company="keycorp" if company=="keycorp"
replace company="liberbank" if company=="liberbank"
replace company="lloyds banking group" if company=="lloyds banking group plc"
replace company="m&t bank" if company=="m&t bank"
replace company="metro bank" if company=="metro bank"
replace company="natixis" if company=="natixis"
replace company="nordea bank" if company=="nordea"
replace company="peoples united financial" if company=="peoples united bank"
replace company="permanent tsb ghg." if company=="permanent tsb"
replace company="pnc finl.svs.gp." if company=="pnc bank"
replace company="royal bank of sctl.gp." if company=="royal bank of scotland (rbs)"
replace company="societe generale" if company=="societe generale"
replace company="standard chartered" if company=="standard chartered bank"
replace company="svb financial group" if company=="svb financial"
replace company="synovus financial" if company=="synovus financial"
replace company="tcf financial" if company=="tcf bank"
replace company="umweltbank" if company=="umweltbank"
replace company="unicaja banco" if company=="unicaja"
replace company="unicredit" if company=="unicredit"
replace company="us bancorp" if company=="us bancorp"
replace company="van lanschot kempen" if company=="van lanschot"
replace company="virgin money uk" if company=="virgin money"
replace company="wells fargo & co" if company=="wells fargo & wachovia"
replace company="zions bancorp." if company=="zions bank"

replace company ="ace cash express" if company == "ace group"
replace company ="aegon" if company == "aegon bank"
replace company ="allianz group / allianz se" if company == "allianz se"
replace company ="bank of new york mellon" if company == "bank of new york mellon / bny mellon"
replace company ="berkshire bank" if company == "berkshire hathaway"
replace company ="berner kantonalbank" if company == "berkshire hathaway"
replace company ="dnb" if company == "dnb norway"
replace company ="pinnacle financial ptns." if company == "pinnacle west capital corporation"
replace company ="schweizerische nat.bk." if company == "schweizerische nationalbank (snb)"
replace company ="sparebank 1 sr-bank" if company == "sparebank1 group"
replace company ="swedbank a" if company == "swedbank ab"
replace company ="virgin money uk" if company == "virgin group"

** -- Keeping only negative campaigns
keep if sentiment<=-1
gen parent_company=(company_type == "Parent")













